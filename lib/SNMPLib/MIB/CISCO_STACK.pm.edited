package SNMPLib::MIB::CISCO_STACK;

use strict;
use warnings;

use base qw(SNMPLib::MIB);
use Data::Dumper;
my @PORT_DUPLEX = qw( half full disagree auto );


__PACKAGE__->set_MIB('CISCO-STACK-MIB');


__PACKAGE__->add_table('portTable',{
				  index   => {
					      name => 'portModuleIndex,portIndex',
					      #munger => \&test,
					   },
				  columns => [
					      {
						  name => 'portDuplex',
					          munger => \&munge_portDuplex,
 					      },  
					      {
						  name => 'portIfIndex',
 					      },  
					      {
						  name => 'portIndex',
 					      },  
					      {
						  name => 'portName',
					      },    
					      {
						  name => 'portType',
					      },
					      ]
				 }
		      );

__PACKAGE__->add_table('portCpbTable',{
				  index   => {
					      name => 'portCpbModuleIndex,portCpbPortIndex',
					      #munger => \&test,
					   },
				  columns => [
					      {
						  name => 'portCpbDuplex',
					          munger => \&SNMPLib::MIB::munge_bits,
 					      },  
					      {
						  name => 'portCpbSpeed',
 					      },  
					      {
						  name => 'portCpbTrunkMode',
 					      },  
					      {
						  name => 'portCpbPortfast',
					      },
					      ]
				 }
		      );

  sub munge_portDuplex {
    my $value = shift;
    return $PORT_DUPLEX[$value];
 }


__PACKAGE__->add_function('i_duplex',\&i_duplex);

sub i_duplex {
    my $self   = shift;
    
    my $p_table = $self->portTable('portDuplex','portIfIndex');
  # my $p_port       = $stack->p_port()         || {};  #portTable
  # my $p_duplex     = $stack->p_duplex()       || {};
   
    my $p_duplex_cap = $self->portCpbTable('portCpbDuplex') || {};   #portCpbTable
     print Dumper($p_duplex_cap); 
     

my $i_duplex = {};
    pritn Dumper($p_table);
    pritn Dumper($p_duplex_cap);
<<<<<<< .mine
        # Test for gigabit
        if ( $p_duplex_cap->{$iid}->{'portCpbDuplex'} eq 0 ) {
            $i_duplex->{$iid} = 'full';
        }
=======
    # foreach my $port ( keys %$p_table ) {
#         my $iid = $p_table->{$port}->{'portIfIndex'};
#         next unless defined $iid;
#         #next if ( defined $partial and $iid !~ /^$partial$/ );
>>>>>>> .r94

#         # Test for gigabit
#         if ( $p_duplex_cap->{$iid}->{'portCpbDuplex'} eq 0 ) {
#             $i_duplex->{$iid} = 'full';
#         }

#         # Auto is not a valid operational state
# 	elsif ( $p_table->{$port}->{'portDuplex'} eq 'auto' ) {
# 	  next;
#         }
#         else {
#             $i_duplex->{$iid} = $p_table->{$port}->{'portDuplex'};
#         }
#     }
    return $i_duplex;
}
